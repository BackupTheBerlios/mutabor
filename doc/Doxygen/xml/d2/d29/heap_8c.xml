<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d2/d29/heap_8c" kind="file">
    <compoundname>heap.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="da/ddb/heap_8h" local="yes">mutabor/heap.h</includes>
    <incdepgraph>
      <node id="20787">
        <label>stdlib.h</label>
      </node>
      <node id="20788">
        <label>string.h</label>
      </node>
      <node id="20792">
        <label>math.h</label>
      </node>
      <node id="20786">
        <label>src/libmutabor/heap.c</label>
        <link refid="heap.c"/>
        <childnode refid="20787" relation="include">
        </childnode>
        <childnode refid="20788" relation="include">
        </childnode>
        <childnode refid="20789" relation="include">
        </childnode>
      </node>
      <node id="20789">
        <label>mutabor/heap.h</label>
        <link refid="da/ddb/heap_8h"/>
        <childnode refid="20790" relation="include">
        </childnode>
        <childnode refid="20791" relation="include">
        </childnode>
      </node>
      <node id="20790">
        <label>stdio.h</label>
      </node>
      <node id="20791">
        <label>mutabor/bad_decl.h</label>
        <link refid="df/d8e/bad__decl_8h"/>
        <childnode refid="20792" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d8/d7d/structheap__element" prot="public">heap_element</innerclass>
    <innerclass refid="df/d0f/structmini__heap" prot="public">mini_heap</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" prot="public" static="no">
        <name>OFFSET</name>
        <initializer>(sizeof(size_t))</initializer>
        <briefdescription>
<para>Größe eines Größentyps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="142" column="9" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="142" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d2/d29/heap_8c_1a9f4e64aebb64a7266779fa72435f0e84" prot="public" static="no" mutable="no">
        <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref></type>
        <definition>char SeRiEnNuMmEr[]</definition>
        <argsstring>[]</argsstring>
        <name>SeRiEnNuMmEr</name>
        <initializer>= { 4,3,70,2,11,61,
                        127
                      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="38" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="38" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1a0cfd6bb0e826070880878722da07d0d6" compoundref="d2/d29/heap_8c" startline="75" endline="81">intern_ungetc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int the_character</definition>
        <argsstring></argsstring>
        <name>the_character</name>
        <briefdescription>
<para>Zeichen und Flag, ob ein gecachetes Zeichen da ist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="44" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1a9a3f8e6ec3a617a7f957e75aaf48dfe7" compoundref="d2/d29/heap_8c" startline="53" endline="61">intern_fgetc</referencedby>
        <referencedby refid="d2/d29/heap_8c_1a0cfd6bb0e826070880878722da07d0d6" compoundref="d2/d29/heap_8c" startline="75" endline="81">intern_ungetc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int is_valid</definition>
        <argsstring></argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="44" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1a9a3f8e6ec3a617a7f957e75aaf48dfe7" compoundref="d2/d29/heap_8c" startline="53" endline="61">intern_fgetc</referencedby>
        <referencedby refid="d2/d29/heap_8c_1a0cfd6bb0e826070880878722da07d0d6" compoundref="d2/d29/heap_8c" startline="75" endline="81">intern_ungetc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref> *</type>
        <definition>struct heap_element* syntax_heap</definition>
        <argsstring></argsstring>
        <name>syntax_heap</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Syntax-Heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="136" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="136" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1a422a5aa2850896c98dd2a5b52959a968" compoundref="d2/d29/heap_8c" startline="276" endline="293">loesche_syntax_speicher</referencedby>
        <referencedby refid="d2/d29/heap_8c_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d29/heap_8c_1a8fc7366cfc2292a9ee85f066c43e861a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref> *</type>
        <definition>struct heap_element* heap_to_use_syntax</definition>
        <argsstring></argsstring>
        <name>heap_to_use_syntax</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Zeiger auf Syntax-Heap-Elemente. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="139" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="139" bodyend="-1"/>
        <referencedby refid="d9/d7c/group__kernel_1ga9068a10d577105ad5306b8694f7b153b" compoundref="da/d02/Hilfs_8cpp" startline="154" endline="234">xmalloc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref> *</type>
        <definition>struct mini_heap* laufzeit_heap</definition>
        <argsstring></argsstring>
        <name>laufzeit_heap</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Laufzeit-Heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="316" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="316" bodyend="-1"/>
        <referencedby refid="d2/d29/heap_8c_1abeb3de8f1a02e90f536a351e3824d7da" compoundref="d2/d29/heap_8c" startline="394" endline="419">loesche_laufzeit_speicher</referencedby>
        <referencedby refid="d2/d29/heap_8c_1a20022f7843438dccec544ebde6e6889b" compoundref="d2/d29/heap_8c" startline="335" endline="353">ymalloc</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d29/heap_8c_1a9a3f8e6ec3a617a7f957e75aaf48dfe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int intern_fgetc</definition>
        <argsstring>(FILE *stream)</argsstring>
        <name>intern_fgetc</name>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Spezielle Implementation von <computeroutput>fgetc</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Es wird getestet, ob sich noch ein Zeichen im Zwischenspeicher befindet. In diesem Fall wird das Zeichen zurückgegeben und der Zwischenspeicher geleert. Ansonsten wird ein neues Zeichen eingelesen. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Datei, von der das Zeichen eingelesen werden soll. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ein zeichen aus dem Eingabestrom. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="53" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="53" bodyend="61"/>
        <references refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" compoundref="d2/d29/heap_8c" startline="44">is_valid</references>
        <references refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" compoundref="d2/d29/heap_8c" startline="44">the_character</references>
        <referencedby refid="d1/de1/Mut__Tab_8cpp_1a9a7bd1b3d14701eb97c03f3ef34deff1" compoundref="d1/de1/Mut__Tab_8cpp" startline="1600" endline="1819">yylex</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a0cfd6bb0e826070880878722da07d0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int intern_ungetc</definition>
        <argsstring>(int c, FILE *stream)</argsstring>
        <name>intern_ungetc</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Spezielle Implementation von <computeroutput>ungetc</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Das Zeichen im Zwischenspeicher wird an Position 0 vom Seriennummer-Feld geschrieben und danach wird das übergebene Zeichen <emphasis>c</emphasis> in den Zwischenspeicher gelegt. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeichen, das ,,zurückgeschrieben`` werden soll. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Datei, für das das Zurückschreiben stattfinden soll. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Das gesamte Programm kann auf diese Art und Weise maximal ein Zeichen zwischenspeichern. Bei weiteren Aufrufen wird das vorher gespeicherte Zeichen einfach überschrieben. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="75" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="75" bodyend="81"/>
        <references refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" compoundref="d2/d29/heap_8c" startline="44">is_valid</references>
        <references refid="d2/d29/heap_8c_1a9f4e64aebb64a7266779fa72435f0e84" compoundref="d2/d29/heap_8c" startline="38">SeRiEnNuMmEr</references>
        <references refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" compoundref="d2/d29/heap_8c" startline="44">the_character</references>
        <referencedby refid="d1/de1/Mut__Tab_8cpp_1a9a7bd1b3d14701eb97c03f3ef34deff1" compoundref="d1/de1/Mut__Tab_8cpp" startline="1600" endline="1819">yylex</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a95116b44bc41d1e825e79c148ab7d0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xalloca</definition>
        <argsstring>(size_t size)</argsstring>
        <name>xalloca</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allokiert einen Speicherbereich und erzeugt im Fehlerfall einen fatalen Fehler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Größe des benötigten Speicherbereiches in <computeroutput>chars</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zeiger auf den Speicherbereich. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="96" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="96" bodyend="107"/>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <referencedby refid="d9/d7c/group__kernel_1ga2ea71bbe5f870f057780e2a023da84ab" compoundref="d3/dca/Interval_8cpp" startline="237" endline="348">berechne_intervalle_absolut</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga12d23ae1832242b2dc02810fe94b1d9b" compoundref="dc/df5/Parser_8cpp" startline="2399" endline="2510">berechne_toene_absolut</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga0bc227a9a1fa0cb630a193e4c6af1af7" compoundref="dc/df5/Parser_8cpp" startline="2954" endline="3547">check_konsistenz</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xde_alloca</definition>
        <argsstring>(void *pointer)</argsstring>
        <name>xde_alloca</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Gibt einen Speicherbereich wieder frei. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeiger auf den freizugebenden Speicherbereich. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="112" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="112" bodyend="118"/>
        <referencedby refid="d9/d7c/group__kernel_1ga2ea71bbe5f870f057780e2a023da84ab" compoundref="d3/dca/Interval_8cpp" startline="237" endline="348">berechne_intervalle_absolut</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga12d23ae1832242b2dc02810fe94b1d9b" compoundref="dc/df5/Parser_8cpp" startline="2399" endline="2510">berechne_toene_absolut</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga0bc227a9a1fa0cb630a193e4c6af1af7" compoundref="dc/df5/Parser_8cpp" startline="2954" endline="3547">check_konsistenz</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/group__kernel_1ga2a0a21b8d377742eac6cb1f7f3229e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xfree</definition>
        <argsstring>(void *pointer)</argsstring>
        <name>xfree</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Freigeben oder auch nich. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeiger auf den Speicherbereich, der hier nicht freigegeben wird. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="152" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="152" bodyend="157"/>
        <referencedby refid="df/d33/mut_8cc_1a875c3b1a93cbaaa7dd8d0c8780825a71" compoundref="df/d33/mut_8cc" startline="3443" endline="3674">yylex</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga17b03e17223aab80aa95d596a74bdc2d" compoundref="d3/da0/TabGen_8cpp" startline="672" endline="831">expandiere_umstimmung</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a42ccfa6fc49cc4ce90cc44cd05052490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xmalloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>xmalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Belegt einen Speicherbereich in der einfach verketteten Liste <computeroutput>syntax_heap</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Gegebenenfalls wird ein neues Element angelegt. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Anzahl der Zeichen (<computeroutput>char</computeroutput>), die belegt werden sollen. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="166" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="166" bodyend="217"/>
        <references refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" compoundref="da/d02/Hilfs_8cpp" startline="134">heap_element::anzahl_belegt</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" compoundref="da/ddb/heap_8h" startline="32">HEAP_PORTION_SYNTAX</references>
        <references refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" compoundref="da/d02/Hilfs_8cpp" startline="133">heap_element::inhalt</references>
        <references refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" compoundref="da/d02/Hilfs_8cpp" startline="136">heap_element::next</references>
        <references refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" compoundref="d2/d29/heap_8c" startline="142">OFFSET</references>
        <references refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" compoundref="d2/d29/heap_8c" startline="136">syntax_heap</references>
        <referencedby refid="d9/d7c/group__kernel_1gaebaf2be9983d7f1f5d2acc6cf38700e1" compoundref="dc/df5/Parser_8cpp" startline="70" endline="78">allgemeine_initialisierungen</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaa10f85957a81a404a0e77ba2a44fa842" compoundref="d3/da0/TabGen_8cpp" startline="626" endline="669">expand_case_liste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga43fbf0e36cd0c7d9dae03b69ea03b63f" compoundref="d3/da0/TabGen_8cpp" startline="908" endline="922">expand_harmony_analysis</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga6885699d369c7b002988534b86e3ed8f" compoundref="d3/da0/TabGen_8cpp" startline="941" endline="975">expand_pattern</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga2c6a360c780adc8cdda172a1a26c164b" compoundref="d3/da0/TabGen_8cpp" startline="396" endline="461">expand_tonliste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga4ea14e5284c0840695599141a22e95c7" compoundref="d3/da0/TabGen_8cpp" startline="514" endline="583">expandiere_logik</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaf4476d0bff62a06cb82f3b86fcbb6d83" compoundref="d3/da0/TabGen_8cpp" startline="891" endline="906">expandiere_midi</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga13b966770b2c6d5e64470a014a958058" compoundref="d3/da0/TabGen_8cpp" startline="464" endline="511">expandiere_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga17b03e17223aab80aa95d596a74bdc2d" compoundref="d3/da0/TabGen_8cpp" startline="672" endline="831">expandiere_umstimmung</referencedby>
        <referencedby refid="d7/d2d/parameter_8c_1a493a3f825cf92358363ce341cbf1c4cb" compoundref="d7/d2d/parameter_8c" startline="116" endline="148">gen_parameter_liste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga4aa808146d17fbd47d95c6418dd3960f" compoundref="d3/da0/TabGen_8cpp" startline="229" endline="290">generate_argument_list</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga148efdc716078d3b564c1062a69deb3c" compoundref="dc/df5/Parser_8cpp" startline="2102" endline="2109">get_ausloeser_default</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga855c893191c840601388c01e299ff059" compoundref="dc/df5/Parser_8cpp" startline="2111" endline="2120">get_ausloeser_harmonie</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga9206f5349aab04f1b7aefb3589024307" compoundref="dc/df5/Parser_8cpp" startline="2122" endline="2131">get_ausloeser_harmonie_form</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gac5911d354b6baa70038c11be48c0cf0c" compoundref="dc/df5/Parser_8cpp" startline="2150" endline="2159">get_ausloeser_midi_in</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaff7c507c9fd047741dfed2964d85f17f" compoundref="dc/df5/Parser_8cpp" startline="2133" endline="2148">get_ausloeser_taste</referencedby>
        <referencedby refid="dc/d30/interpreter_8c_1a97e40f66eb0949a7a12b20cc142bb401" compoundref="dc/d30/interpreter_8c" startline="61" endline="75">get_cache_konstante</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga30c24ac2380ae3f51495f58ebc70dacc" compoundref="dc/df5/Parser_8cpp" startline="2238" endline="2309">get_instrument_dekl</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga4b4e6fa6e9c893d4e8a3e82510c13449" compoundref="dc/df5/Parser_8cpp" startline="424" endline="440">get_new_aktion_aufruf_element</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gad8049d5c41cf517976c697869fdfc672" compoundref="dc/df5/Parser_8cpp" startline="457" endline="467">get_new_aktion_harmony_analysis</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gafebabb9473c10d702661104df0815209" compoundref="dc/df5/Parser_8cpp" startline="442" endline="455">get_new_aktion_midi_out_element</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga4f8bc460d3beda0be5775b24fae8f678" compoundref="dc/df5/Parser_8cpp" startline="393" endline="404">get_new_anchor_in_argument_list</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaa7e7939d922025be8735fddb04b9f215" compoundref="dc/df5/Parser_8cpp" startline="2180" endline="2195">get_new_anweisung</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga81c47402f3c0b31e7dbd019f2c5af1c8" compoundref="dc/df5/Parser_8cpp" startline="380" endline="391">get_new_distance_in_argument_list</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga6702b7c0515398c40056999e7f01b93f" compoundref="dc/df5/Parser_8cpp" startline="483" endline="501">get_new_faktor_anteil</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaf562e38749d4e20abf301035ee953c44" compoundref="dc/df5/Parser_8cpp" startline="2016" endline="2037">get_new_harmonie</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gab7cf631c5930ce9ddf9e329da44aa6f2" compoundref="dc/df5/Parser_8cpp" startline="232" endline="243">get_new_integer_in_integersequenz</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga61598ecf20cc7599cb2d021d760ffadd" compoundref="dc/df5/Parser_8cpp" startline="1083" endline="1109">get_new_intervall</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gad7e891a43f3a300d99b05cf242dad0be" compoundref="dc/df5/Parser_8cpp" startline="1111" endline="1134">get_new_intervall_komplex</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga580f12d4669345b7a4c3e340395d4fd5" compoundref="dc/df5/Parser_8cpp" startline="2197" endline="2222">get_new_logik</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gadc4980347039ec33dd18e1f5f330b9c5" compoundref="dc/df5/Parser_8cpp" startline="364" endline="377">get_new_name_in_argument_list</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gab187cd483b295cabc2e95aaca88d6c1d" compoundref="dc/df5/Parser_8cpp" startline="265" endline="275">get_new_name_in_parameterlist</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaba74e6342106000f15b6eadccf6058f9" compoundref="dc/df5/Parser_8cpp" startline="348" endline="361">get_new_number_in_argument_list</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga19a887bf353aae8a6c596bbe041452f5" compoundref="dc/df5/Parser_8cpp" startline="1996" endline="2014">get_new_taste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga419f9d8798edbc09103018f1ccdc94cd" compoundref="dc/df5/Parser_8cpp" startline="1140" endline="1161">get_new_ton_absolut</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga496f8bf3d3d68895fb6c45618266a706" compoundref="dc/df5/Parser_8cpp" startline="1241" endline="1256">get_new_ton_in_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga85cef92c0aca3d10afb617641a96e509" compoundref="dc/df5/Parser_8cpp" startline="1189" endline="1230">get_new_ton_komplex_negative</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga62f7dae14d0fa62fc8e73c9d23626cce" compoundref="dc/df5/Parser_8cpp" startline="1164" endline="1187">get_new_ton_komplex_positive</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga3f399562d17d09e745afb2151179e858" compoundref="dc/df5/Parser_8cpp" startline="1258" endline="1281">get_new_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga222cc37160dba48895df75b250feb72e" compoundref="dc/df5/Parser_8cpp" startline="1283" endline="1321">get_new_tonsystem_negative</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gad473a0797f8565fe09658bc2cb38479f" compoundref="dc/df5/Parser_8cpp" startline="1480" endline="1503">get_new_umstimm_expression</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gab3521eb93946052c58c53570c54ea025" compoundref="dc/df5/Parser_8cpp" startline="1531" endline="1558">get_new_umstimm_expression_negative</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gad7b624da5d90c205e4ac8fee7ad62c76" compoundref="dc/df5/Parser_8cpp" startline="1506" endline="1528">get_new_umstimm_expression_positive</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga7c4bc803e0c04cff4be9f9a29085ace4" compoundref="dc/df5/Parser_8cpp" startline="1814" endline="1831">get_umstimmungs_case_default_element</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaa0421cb00e952d3312c20c38aae8634b" compoundref="dc/df5/Parser_8cpp" startline="1796" endline="1812">get_umstimmungs_case_zahl_element</referencedby>
        <referencedby refid="df/de8/ton_8c_1a153ddee23195f6f86fe37d75d5ac1c67" compoundref="df/de8/ton_8c" startline="45" endline="51">init_nullton</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga6ef5bbd2b9807cdd773166c9824e2a11" compoundref="dc/df5/Parser_8cpp" startline="1333" endline="1353">init_umstimmung</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gabebfd8538aae475e3a2ba47f95d7d2c3" compoundref="d3/da0/TabGen_8cpp" startline="978" endline="1085">insert_in_globale_liste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gaa32d94398d0aa7cb0b2f2bf3b2308c30" compoundref="d3/da0/TabGen_8cpp" startline="1087" endline="1214">insert_in_lokale_liste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga958b1662c140766c29406d4b67446861" compoundref="da/d02/Hilfs_8cpp" startline="270" endline="285">xcalloc</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga3aaf4c6fc990494645d2d7cc6b60d9ac" compoundref="da/d02/Hilfs_8cpp" startline="236" endline="267">xrealloc</referencedby>
        <referencedby refid="df/d33/mut_8cc_1a875c3b1a93cbaaa7dd8d0c8780825a71" compoundref="df/d33/mut_8cc" startline="3443" endline="3674">yylex</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1ac56ae312aa3a8be7c32ffbd997fed591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xrealloc</definition>
        <argsstring>(void *block, size_t newsize)</argsstring>
        <name>xrealloc</name>
        <param>
          <type>void *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
<para>Ändert die Größe eines aktuellen Speicherbereiches im privaten Syntax-Heap. </para>        </briefdescription>
        <detaileddescription>
<para>Im Fehlerfall wird ein fataler Fehler ausgelöst. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeiger auf den Block, dessen Größe geändert werden soll. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Neue Größe für den Block. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="224" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="224" bodyend="251"/>
        <references refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" compoundref="da/d02/Hilfs_8cpp" startline="134">heap_element::anzahl_belegt</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" compoundref="da/ddb/heap_8h" startline="32">HEAP_PORTION_SYNTAX</references>
        <references refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" compoundref="da/d02/Hilfs_8cpp" startline="133">heap_element::inhalt</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="df/d33/mut_8cc_1a875c3b1a93cbaaa7dd8d0c8780825a71" compoundref="df/d33/mut_8cc" startline="3443" endline="3674">yylex</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1ab0c7434dd1577c62500713d2508d89ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xcalloc</definition>
        <argsstring>(size_t anzahl, size_t size)</argsstring>
        <name>xcalloc</name>
        <param>
          <type>size_t</type>
          <declname>anzahl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fordert einen Speicherbereich vom Syntax-Heap an, der <emphasis>anzahl</emphasis> * <emphasis>size</emphasis> Zeichen enthält. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anzahl</parametername>
</parameternamelist>
<parameterdescription>
<para>Anzahl der Einheiten </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Größe einer Speichereinheit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="258" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="258" bodyend="268"/>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="d9/d7c/group__kernel_1ga905a1b74bbe8c62344795da1a2a07c3a" compoundref="dc/df5/Parser_8cpp" startline="2697" endline="2862">check_aktionen</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gab3424f2af7bcb85b065de642ca1d1105" compoundref="d3/da0/TabGen_8cpp" startline="924" endline="939">create_midi_scan_liste</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga166a469a0ff7e89b06d5a4b2055bb1a9" compoundref="d3/da0/TabGen_8cpp" startline="1291" endline="1368">expand_decition_tree</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga4aa808146d17fbd47d95c6418dd3960f" compoundref="d3/da0/TabGen_8cpp" startline="229" endline="290">generate_argument_list</referencedby>
        <referencedby refid="dc/d30/interpreter_8c_1a80f694cdb409db5d5dd155ca0759f310" compoundref="dc/d30/interpreter_8c" startline="81" endline="139">mutabor_tabellen_generator</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a422a5aa2850896c98dd2a5b52959a968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int loesche_syntax_speicher</definition>
        <argsstring>(void)</argsstring>
        <name>loesche_syntax_speicher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Löscht den gesamten Syntax-Heap. </para>        </briefdescription>
        <detaileddescription>
<para>Anschließend werden die beiden Zeiger <computeroutput>syntax_heap</computeroutput> und <computeroutput>heap_to_use</computeroutput> auf <computeroutput>NULL</computeroutput> gesetzt. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>kein Fehler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Fehler </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="276" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="276" bodyend="293"/>
        <references refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" compoundref="da/d02/Hilfs_8cpp" startline="136">heap_element::next</references>
        <references refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" compoundref="d2/d29/heap_8c" startline="136">syntax_heap</references>
        <referencedby refid="d5/dee/group__route_1gaad4a0b212e3112a1d228fd0ed8cadc80" compoundref="dd/dc6/Box_8cpp" startline="604" endline="645">mutabor::BoxClass::Compile</referencedby>
        <referencedby refid="d3/d14/gmut_8cpp_1aa4fbd34cae8e303c82cf546234111c10" compoundref="d3/d14/gmut_8cpp" startline="153" endline="185">GMutCompile</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga53723dd27d3674c2853505bcf0e41b6e" compoundref="da/d02/Hilfs_8cpp" startline="310" endline="313">init_syntax_speicher</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gada2c15aa7cb554aa175109fcb3771be9" compoundref="d1/dce/box_8cpp" startline="50" endline="69">mutabor_set_logic</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga71f10b089581270382caaf7219946a1f" compoundref="d1/da7/boxTest_8cpp" startline="331" endline="366">boxTest::testBug1Permutation1</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gacd9628c16629b6a3989ef814becb55be" compoundref="d1/da7/boxTest_8cpp" startline="369" endline="457">boxTest::testBug1Permutation2</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gae5cd429df106dae578f5e9bca96fdcce" compoundref="d1/da7/boxTest_8cpp" startline="283" endline="329">boxTest::testFindKeyByKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a7f918156b5c5fbb2fddf370f407292ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_syntax_speicher</definition>
        <argsstring>(void)</argsstring>
        <name>init_syntax_speicher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialisiert den Syntax-Heap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Rückgabewert</parametername>
</parameternamelist>
<parameterdescription>
<para>vom Löschen. Siehe <computeroutput>loesche_syntax_speicher</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="298" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="298" bodyend="301"/>
        <references refid="da/ddb/heap_8h_1a422a5aa2850896c98dd2a5b52959a968" compoundref="d2/d29/heap_8c" startline="276" endline="293">loesche_syntax_speicher</references>
      </memberdef>
      <memberdef kind="function" id="d9/d7c/group__kernel_1ga59a78112aeea661097792d86d23ea657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void yfree</definition>
        <argsstring>(void *pointer)</argsstring>
        <name>yfree</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Löscht <emphasis>pointer</emphasis> nicht vom Laufzeit-Heap. </para>        </briefdescription>
        <detaileddescription>
<para>;-). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeiger auf den zu ,,löschenden`` Speicherbreich. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="323" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a20022f7843438dccec544ebde6e6889b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ymalloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>ymalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fordert Speicher auf dem Laufzeit-Heap an. </para>        </briefdescription>
        <detaileddescription>
<para>Dabei wird auf der Liste ein neues Element angelegt. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Größe des Speicherbereiches in <computeroutput>char-Einheiten</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zeiger auf den Speicherbereich. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="335" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="335" bodyend="353"/>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" compoundref="d2/d29/heap_8c" startline="316">laufzeit_heap</references>
        <references refid="df/d0f/structmini__heap_1a7a916371240bff53d356d1aa120457b3" compoundref="da/d02/Hilfs_8cpp" startline="324">mini_heap::next</references>
        <references refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" compoundref="da/d02/Hilfs_8cpp" startline="323">mini_heap::pointer</references>
        <referencedby refid="d9/d7c/group__kernel_1gad0e9c82241b92358c5780470413b11bf" compoundref="df/d23/Execute_8cpp" startline="193" endline="268">call_actions</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga430cfed4b852ea878d1290f72c19067c" compoundref="da/d02/Hilfs_8cpp" startline="369" endline="374">ycalloc</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga340ad3544d1a04a566089bb9a6a2ecc1" compoundref="da/d02/Hilfs_8cpp" startline="361" endline="367">yrealloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1a4a6ce40acee5db6621bace7d200296a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* yrealloc</definition>
        <argsstring>(void *block, size_t newsize)</argsstring>
        <name>yrealloc</name>
        <param>
          <type>void *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
<para>Ändert die Größe eines Elementes auf dem Laufzeit-Heap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeiger auf das zu ändernde Element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newsize</parametername>
</parameternamelist>
<parameterdescription>
<para>neue Größe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zeiger auf das neue Element. </para></simplesect>
<simplesect kind="warning"><para>es wird nicht geprüft, ob der neue Speicherbereich größer, als der alte ist. Das kann gegebenenfalls zu Speicherüberlauf-Fehlern führen. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="362" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="362" bodyend="366"/>
        <references refid="da/ddb/heap_8h_1a20022f7843438dccec544ebde6e6889b" compoundref="d2/d29/heap_8c" startline="335" endline="353">ymalloc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1ad4012a6a8a0b3a9007cf8a440370076e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ycalloc</definition>
        <argsstring>(size_t anzahl, size_t size)</argsstring>
        <name>ycalloc</name>
        <param>
          <type>size_t</type>
          <declname>anzahl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fordert eine Anzahl von Einheiten auf dem Laufzeit-Heap an. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anzahl</parametername>
</parameternamelist>
<parameterdescription>
<para>Anzahl der Speichereinheiten. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Größe einer Einheit. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Speicherbereich. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="373" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="373" bodyend="377"/>
        <references refid="da/ddb/heap_8h_1a20022f7843438dccec544ebde6e6889b" compoundref="d2/d29/heap_8c" startline="335" endline="353">ymalloc</references>
        <referencedby refid="d9/d7c/group__kernel_1gad0e9c82241b92358c5780470413b11bf" compoundref="df/d23/Execute_8cpp" startline="193" endline="268">call_actions</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1ac1b46a2090e2218f2e85831fe4a5787f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_laufzeit_speicher</definition>
        <argsstring>(void)</argsstring>
        <name>init_laufzeit_speicher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialisiert (Löscht) den Laufzeit-Speicher. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>kein Fehler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Fehler </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="385" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="385" bodyend="388"/>
        <references refid="da/ddb/heap_8h_1abeb3de8f1a02e90f536a351e3824d7da" compoundref="d2/d29/heap_8c" startline="394" endline="419">loesche_laufzeit_speicher</references>
      </memberdef>
      <memberdef kind="function" id="d2/d29/heap_8c_1abeb3de8f1a02e90f536a351e3824d7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int loesche_laufzeit_speicher</definition>
        <argsstring>(void)</argsstring>
        <name>loesche_laufzeit_speicher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Löscht den Laufzeitspeicher. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>kein Fehler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Fehler </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" line="394" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c" bodystart="394" bodyend="419"/>
        <references refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" compoundref="d2/d29/heap_8c" startline="316">laufzeit_heap</references>
        <references refid="df/d0f/structmini__heap_1a7a916371240bff53d356d1aa120457b3" compoundref="da/d02/Hilfs_8cpp" startline="324">mini_heap::next</references>
        <references refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" compoundref="da/d02/Hilfs_8cpp" startline="323">mini_heap::pointer</references>
        <referencedby refid="d9/d7c/group__kernel_1ga7a7a804f48564180fc2987db7859dd62" compoundref="da/d02/Hilfs_8cpp" startline="379" endline="382">init_laufzeit_speicher</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Heapverwaltung. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="rcs"><title>Header:</title><para>/home/tobias/macbookbackup/Entwicklung/mutabor/cvs-backup/mutabor/mutabor/libmutabor/heap.c,v 1.5 2005/07/20 11:51:59 keinstein Exp </para></simplesect>
<simplesect kind="author"><para>R.Krauße <ulink url="mailto:krausze@users.berlios.de">krausze@users.berlios.de</ulink> </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2005/07/20 11:51:59 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>1.5 </para></simplesect>
<xrefsect id="de/da5/bug_1_bug000003"><xreftitle>Fehler</xreftitle><xrefdescription><para>fatal_error(...) muss von Oberfläche getrennt werden. </para></xrefdescription></xrefsect><xrefsect id="dd/da0/todo_1_todo000029"><xreftitle>Noch zu erledigen</xreftitle><xrefdescription><para>Portabilisierung von: memmove</para></xrefdescription></xrefsect></para><para><simplesect kind="rcs"><title>Log:</title><para><ref refid="d2/d29/heap_8c" kindref="compound">heap.c</ref>,v </para></simplesect>
Revision 1.5 2005/07/20 11:51:59 keinstein CVS-Kopf config.h</para><para>Revision 1.4 2005/07/19 15:15:27 keinstein Using own Templates </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Relevante<sp/>Variablen<sp/>für<sp/>diese<sp/>Datei:</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>*<sp/>HAVE_MEMMOVE<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>*<sp/>malloc</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>*<sp/>size_t</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/ddb/heap_8h" kindref="compound">mutabor/heap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="d2/d29/heap_8c_1a9f4e64aebb64a7266779fa72435f0e84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d2/d29/heap_8c_1a9f4e64aebb64a7266779fa72435f0e84" kindref="member">SeRiEnNuMmEr</ref>[]<sp/>=<sp/>{<sp/>4,3,70,2,11,61,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" kindref="member">the_character</ref>,<sp/><ref refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" kindref="member">is_valid</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="d2/d29/heap_8c_1a9a3f8e6ec3a617a7f957e75aaf48dfe7" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="da/ddb/heap_8h_1a9a3f8e6ec3a617a7f957e75aaf48dfe7" kindref="member">intern_fgetc</ref>(<sp/>FILE<sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeichen;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" kindref="member">is_valid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" kindref="member">is_valid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" kindref="member">the_character</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>zeichen<sp/>=<sp/>fgetc(stream);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zeichen;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>-par</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="75" refid="d2/d29/heap_8c_1a0cfd6bb0e826070880878722da07d0d6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="da/ddb/heap_8h_1a0cfd6bb0e826070880878722da07d0d6" kindref="member">intern_ungetc</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>FILE<sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d29/heap_8c_1a9f4e64aebb64a7266779fa72435f0e84" kindref="member">SeRiEnNuMmEr</ref>[0]<sp/>=<sp/><ref refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" kindref="member">the_character</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d29/heap_8c_1a3ba613497814aa75f4d53254ddeaadf6" kindref="member">is_valid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d29/heap_8c_1a6299a9e023124b7226ab405cc4c12c9e" kindref="member">the_character</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>.par</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/************************************</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">nur<sp/>wenn<sp/>alloca<sp/>nicht<sp/>da<sp/>ist<sp/>!<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">*************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d2/d29/heap_8c_1a95116b44bc41d1e825e79c148ab7d0a6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1a95116b44bc41d1e825e79c148ab7d0a6" kindref="member">xalloca</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/>Ax_malloc<sp/>(size);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/>malloc<sp/>(size);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" kindref="member">xde_alloca</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pointer)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Ax_ifree<sp/>(pointer);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(pointer);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>Verwaltung<sp/>von<sp/>zwei<sp/>eigenen<sp/>Heaps,</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>die<sp/>am<sp/>STÜCK<sp/>gelöscht<sp/>werden<sp/>können<sp/>!<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">*****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[<ref refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" kindref="member">HEAP_PORTION_SYNTAX</ref>]<sp/>;<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>*<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref>;<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>*<sp/><ref refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" kindref="member">syntax_heap</ref><sp/>=<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="d2/d29/heap_8c_1a8fc7366cfc2292a9ee85f066c43e861a" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>*<sp/><ref refid="d2/d29/heap_8c_1a8fc7366cfc2292a9ee85f066c43e861a" kindref="member">heap_to_use_syntax</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" refkind="member"><highlight class="preprocessor">#define<sp/>OFFSET<sp/>(sizeof(size_t))</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>-par</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="152" refid="d9/d7c/group__kernel_1ga2a0a21b8d377742eac6cb1f7f3229e86" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1ga2a0a21b8d377742eac6cb1f7f3229e86" kindref="member">xfree</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pointer)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Nichts,<sp/>wenn<sp/>eigene<sp/>Speicherverwaltung<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>free<sp/>(pointer);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>.par</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="166" refid="d2/d29/heap_8c_1a42ccfa6fc49cc4ce90cc44cd05052490" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>+<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref><sp/>&gt;<sp/><ref refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" kindref="member">HEAP_PORTION_SYNTAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syntax_heap<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_heap<sp/>=<sp/>Ax_malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(syntax_heap,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_heap<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>*)<sp/>calloc<sp/>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syntax_heap<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>=<sp/><ref refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" kindref="member">syntax_heap</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/****<sp/>Jetzt<sp/>ist<sp/>zumindest<sp/>ein<sp/>Block<sp/>da<sp/>******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>+<sp/>size<sp/>+<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" kindref="member">HEAP_PORTION_SYNTAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/>&amp;<sp/>heap_to_use_syntax<sp/>-&gt;<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[<sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>+<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref><sp/>]<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>+=<sp/>size<sp/>+<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)help)<sp/>[<sp/>-<sp/>1<sp/>]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref><sp/>=<sp/>Ax_malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref>,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>*)<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calloc<sp/>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref>));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>=<sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>=<sp/>size<sp/>+<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)&amp;(heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[<sp/>0<sp/>])<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[<sp/><ref refid="d2/d29/heap_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref><sp/>]<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="d2/d29/heap_8c_1ac56ae312aa3a8be7c32ffbd997fed591" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1ac56ae312aa3a8be7c32ffbd997fed591" kindref="member">xrealloc</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newsize)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)block)<sp/>[<sp/>-<sp/>1<sp/>]<sp/>+<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)block</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>&amp;<sp/>heap_to_use_syntax<sp/>-&gt;<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref>]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)block<sp/>+<sp/>newsize<sp/>&lt;<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1a78a964bd6d98bcf45a5007a308d56876" kindref="member">inhalt</ref><sp/>[<sp/><ref refid="da/ddb/heap_8h_1aa93f2514a0844adf4ff82a3853148266" kindref="member">HEAP_PORTION_SYNTAX</ref><sp/>]))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Dann<sp/>war<sp/>block<sp/>der<sp/>vorherige<sp/>xmalloc<sp/>und<sp/>es<sp/>passt<sp/>noch<sp/>rein<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heap_to_use_syntax<sp/>-&gt;<sp/><ref refid="d8/d7d/structheap__element_1ab400a0aecbfd3e5d9062a8e71f1e242c" kindref="member">anzahl_belegt</ref><sp/>+=<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newsize<sp/>-<sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)block)<sp/>[<sp/>-<sp/>1<sp/>]<sp/>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)block)<sp/>[<sp/>-<sp/>1<sp/>]<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>block;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>(newsize);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(help,<sp/>block,<sp/>newsize);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="d2/d29/heap_8c_1ab0c7434dd1577c62500713d2508d89ce" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1ab0c7434dd1577c62500713d2508d89ce" kindref="member">xcalloc</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>anzahl,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>(anzahl<sp/>*<sp/>size);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(help,<sp/>0,<sp/>anzahl<sp/>*<sp/>size);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="d2/d29/heap_8c_1a422a5aa2850896c98dd2a5b52959a968" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1a422a5aa2850896c98dd2a5b52959a968" kindref="member">loesche_syntax_speicher</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>*<sp/>lauf<sp/>=<sp/><ref refid="d2/d29/heap_8c_1a4e4fb1dd94e7d296424e04f403a90779" kindref="member">syntax_heap</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lauf)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/d7d/structheap__element" kindref="compound">heap_element</ref><sp/>*<sp/>help<sp/>=<sp/>lauf-&gt;<ref refid="d8/d7d/structheap__element_1aceed2ed2415535fa5d77702aa5ec526a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ax_ifree<sp/>(lauf);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lauf);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lauf<sp/>=<sp/>help;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>syntax_heap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>heap_to_use_syntax<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>0=ok,<sp/>1=fehler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="d2/d29/heap_8c_1a7f918156b5c5fbb2fddf370f407292ca" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1a7f918156b5c5fbb2fddf370f407292ca" kindref="member">init_syntax_speicher</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1a422a5aa2850896c98dd2a5b52959a968" kindref="member">loesche_syntax_speicher</ref><sp/>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/***************************</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/>Der<sp/>Laufzeit-heap<sp/>hat<sp/>nur<sp/>wenige<sp/>elemente<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="comment">***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>*<sp/><ref refid="df/d0f/structmini__heap_1a7a916371240bff53d356d1aa120457b3" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>*<sp/><ref refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" kindref="member">laufzeit_heap</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>-par</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="323" refid="d9/d7c/group__kernel_1ga59a78112aeea661097792d86d23ea657" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1ga59a78112aeea661097792d86d23ea657" kindref="member">yfree</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" kindref="member">pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>nix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warn<sp/>.par</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="335" refid="d2/d29/heap_8c_1a20022f7843438dccec544ebde6e6889b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1a20022f7843438dccec544ebde6e6889b" kindref="member">ymalloc</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help1<sp/>=<sp/>Ax_malloc<sp/>(size);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help1<sp/>=<sp/>malloc<sp/>(size);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>*<sp/>help2<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref>*)<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref>));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help1<sp/>==<sp/>NULL<sp/>||<sp/>help2<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(4);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>help2<sp/>-&gt;<sp/><ref refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" kindref="member">pointer</ref><sp/>=<sp/>help1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>help2<sp/>-&gt;<sp/><ref refid="df/d0f/structmini__heap_1a7a916371240bff53d356d1aa120457b3" kindref="member">next</ref><sp/>=<sp/><ref refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" kindref="member">laufzeit_heap</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>laufzeit_heap<sp/>=<sp/>help2;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="d2/d29/heap_8c_1a4a6ce40acee5db6621bace7d200296a9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1a4a6ce40acee5db6621bace7d200296a9" kindref="member">yrealloc</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newsize)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/><ref refid="da/ddb/heap_8h_1a20022f7843438dccec544ebde6e6889b" kindref="member">ymalloc</ref><sp/>(newsize);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove<sp/>(help,<sp/>block,<sp/>newsize);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="d2/d29/heap_8c_1ad4012a6a8a0b3a9007cf8a440370076e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="da/ddb/heap_8h_1ad4012a6a8a0b3a9007cf8a440370076e" kindref="member">ycalloc</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>anzahl,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>help<sp/>=<sp/><ref refid="da/ddb/heap_8h_1a20022f7843438dccec544ebde6e6889b" kindref="member">ymalloc</ref><sp/>(<sp/>anzahl<sp/>*<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(help,<sp/>0,<sp/>anzahl<sp/>*<sp/>size);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>help;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="d2/d29/heap_8c_1ac1b46a2090e2218f2e85831fe4a5787f" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1ac1b46a2090e2218f2e85831fe4a5787f" kindref="member">init_laufzeit_speicher</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1abeb3de8f1a02e90f536a351e3824d7da" kindref="member">loesche_laufzeit_speicher</ref><sp/>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="d2/d29/heap_8c_1abeb3de8f1a02e90f536a351e3824d7da" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/ddb/heap_8h_1abeb3de8f1a02e90f536a351e3824d7da" kindref="member">loesche_laufzeit_speicher</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>*<sp/>lauf<sp/>=<sp/><ref refid="d2/d29/heap_8c_1a124eb09d5e75b3f3c9d58ae26f6ac406" kindref="member">laufzeit_heap</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lauf)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/d0f/structmini__heap" kindref="compound">mini_heap</ref><sp/>*<sp/>help<sp/>=<sp/>lauf;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ax_ifree<sp/>(lauf<sp/>-&gt;<sp/><ref refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lauf<sp/>-&gt;<sp/><ref refid="df/d0f/structmini__heap_1aecfe0d88db686d1d6863c76d37b14099" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf<sp/>=<sp/>lauf<sp/>-&gt;<sp/><ref refid="df/d0f/structmini__heap_1a7a916371240bff53d356d1aa120457b3" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ACS_VERSION</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ax_ifree<sp/>(help);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(help);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>laufzeit_heap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>0=ok,<sp/>1=fehler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/heap.c"/>
  </compounddef>
</doxygen>
