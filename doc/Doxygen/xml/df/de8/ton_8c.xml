<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="df/de8/ton_8c" kind="file">
    <compoundname>ton.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="d4/d12/ton_8h" local="yes">mutabor/ton.h</includes>
    <includes refid="da/ddb/heap_8h" local="yes">mutabor/heap.h</includes>
    <includes refid="d2/d8a/interval_8h" local="yes">mutabor/interval.h</includes>
    <includes refid="de/d45/errors_8h" local="yes">mutabor/errors.h</includes>
    <incdepgraph>
      <node id="21225">
        <label>mutabor/interval.h</label>
        <link refid="d2/d8a/interval_8h"/>
        <childnode refid="21226" relation="include">
        </childnode>
        <childnode refid="21228" relation="include">
        </childnode>
      </node>
      <node id="21227">
        <label>mutabor/object.h</label>
        <link refid="de/d10/object_8h"/>
      </node>
      <node id="21231">
        <label>mutabor/errors.h</label>
        <link refid="de/d45/errors_8h"/>
      </node>
      <node id="21226">
        <label>mutabor/identifier.h</label>
        <link refid="d7/da7/identifier_8h"/>
        <childnode refid="21227" relation="include">
        </childnode>
      </node>
      <node id="21222">
        <label>string.h</label>
      </node>
      <node id="21224">
        <label>mutabor/ton.h</label>
        <link refid="d4/d12/ton_8h"/>
        <childnode refid="21225" relation="include">
        </childnode>
      </node>
      <node id="21221">
        <label>src/libmutabor/ton.c</label>
        <link refid="ton.c"/>
        <childnode refid="21222" relation="include">
        </childnode>
        <childnode refid="21223" relation="include">
        </childnode>
        <childnode refid="21224" relation="include">
        </childnode>
        <childnode refid="21230" relation="include">
        </childnode>
        <childnode refid="21225" relation="include">
        </childnode>
        <childnode refid="21231" relation="include">
        </childnode>
      </node>
      <node id="21229">
        <label>math.h</label>
      </node>
      <node id="21230">
        <label>mutabor/heap.h</label>
        <link refid="da/ddb/heap_8h"/>
        <childnode refid="21223" relation="include">
        </childnode>
        <childnode refid="21228" relation="include">
        </childnode>
      </node>
      <node id="21223">
        <label>stdio.h</label>
      </node>
      <node id="21228">
        <label>mutabor/bad_decl.h</label>
        <link refid="df/d8e/bad__decl_8h"/>
        <childnode refid="21229" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" prot="public" static="no">
        <name>adjazent</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer><ref refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" kindref="member">matrix</ref> [ (a) * <ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref> * sizeof (<ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref>) \
                             + (b) * sizeof (<ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref>)]</initializer>
        <briefdescription>
<para>Zugriff auf Adjazenzmatrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Zeile der Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Spalte der Matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="229" column="9" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="229" bodyend="-1"/>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
        <referencedby refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" compoundref="df/de8/ton_8c" startline="272" endline="285">test_zyklen</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="df/de8/ton_8c_1aa614e631a7a7c9e90ad0614fbee2dd13" prot="public" static="no" mutable="no">
        <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
        <definition>struct ton* list_of_toene</definition>
        <argsstring></argsstring>
        <name>list_of_toene</name>
        <briefdescription>
<para>Wurzel der Tonliste. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="42" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de8/ton_8c_1a680b21381666f4b8c5d13f5c832e51c2" prot="public" static="no" mutable="no">
        <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
        <definition>struct ton* ton_ohne_namen</definition>
        <argsstring></argsstring>
        <name>ton_ohne_namen</name>
        <briefdescription>
<para>Frequenz=0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="43" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int anzahl_toene</definition>
        <argsstring></argsstring>
        <name>anzahl_toene</name>
        <briefdescription>
<para>So viele Toene wurden gelesen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="215" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="215" bodyend="-1"/>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
        <referencedby refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" compoundref="df/de8/ton_8c" startline="272" endline="285">test_zyklen</referencedby>
        <referencedby refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" compoundref="df/de8/ton_8c" startline="257" endline="266">ton_nummer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/de8/ton_8c_1a94804479feb853d5626e9384b24e8985" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> **</type>
        <definition>struct ton** toene</definition>
        <argsstring></argsstring>
        <name>toene</name>
        <briefdescription>
<para>Feld von Toenen zum schnelleren Zugriff als ueber Listen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="217" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="217" bodyend="-1"/>
        <referencedby refid="d9/d7c/group__kernel_1ga13b966770b2c6d5e64470a014a958058" compoundref="d3/da0/TabGen_8cpp" startline="464" endline="511">expandiere_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga3f399562d17d09e745afb2151179e858" compoundref="dc/df5/Parser_8cpp" startline="1258" endline="1281">get_new_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga222cc37160dba48895df75b250feb72e" compoundref="dc/df5/Parser_8cpp" startline="1283" endline="1321">get_new_tonsystem_negative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" prot="public" static="yes" mutable="no">
        <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
        <definition>char* visited</definition>
        <argsstring></argsstring>
        <name>visited</name>
        <briefdescription>
<para>Traversierungsmerker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="220" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="220" bodyend="-1"/>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
        <referencedby refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" compoundref="df/de8/ton_8c" startline="272" endline="285">test_zyklen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" prot="public" static="yes" mutable="no">
        <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
        <definition>char* matrix</definition>
        <argsstring></argsstring>
        <name>matrix</name>
        <briefdescription>
<para>Adjazenzmatrix (auf sie darf nur ueber das folgende Makro zugegriffen werden ! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="222" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="222" bodyend="-1"/>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/de8/ton_8c_1a153ddee23195f6f86fe37d75d5ac1c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_nullton</definition>
        <argsstring>(void)</argsstring>
        <name>init_nullton</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="45" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="45" bodyend="51"/>
        <references refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" compoundref="d4/d12/ton_8h" startline="34">ton::name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" compoundref="d4/d12/ton_8h" startline="23">ton_absolut</references>
        <references refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21">ton::ton_absolut</references>
        <references refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" compoundref="d4/d12/ton_8h" startline="35">ton::ton_typ</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="d2/d72/parser_8c_1a417c5902868bcd39387f99422a2040bf" compoundref="d2/d72/parser_8c" startline="64" endline="66">allgemeine_initialisierungen</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a7205dceb2bb780245ab66f9b032e301a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ton_list_laenge</definition>
        <argsstring>(struct ton *list)</argsstring>
        <name>ton_list_laenge</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Zählen der Elemente einer einfach verketteten Tonliste. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Liste der Töne </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Anzahl der Elemente von <emphasis>list</emphasis> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="57" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="57" bodyend="60"/>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d4/d12/ton_8h_1a7205dceb2bb780245ab66f9b032e301a" compoundref="df/de8/ton_8c" startline="57" endline="60">ton_list_laenge</references>
        <referencedby refid="d9/d7c/group__kernel_1ga12d23ae1832242b2dc02810fe94b1d9b" compoundref="dc/df5/Parser_8cpp" startline="2399" endline="2510">berechne_toene_absolut</referencedby>
        <referencedby refid="d5/dee/group__route_1gaad4a0b212e3112a1d228fd0ed8cadc80" compoundref="dd/dc6/Box_8cpp" startline="604" endline="645">mutabor::BoxClass::Compile</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga13b966770b2c6d5e64470a014a958058" compoundref="d3/da0/TabGen_8cpp" startline="464" endline="511">expandiere_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga9733bb2ee682ffff8a155dd6b1b93e8c" compoundref="dc/df5/Parser_8cpp" startline="614" endline="931">mutabor_programm_einlesen</referencedby>
        <referencedby refid="df/de8/ton_8c_1a7205dceb2bb780245ab66f9b032e301a" compoundref="df/de8/ton_8c" startline="57" endline="60">ton_list_laenge</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1adf3f50ce72e583c1a3a2c42302c7d7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
        <definition>struct ton* get_ton</definition>
        <argsstring>(char *name, struct ton *liste)</argsstring>
        <name>get_ton</name>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>liste</declname>
        </param>
        <briefdescription>
<para>Sucht einen ton aus einer Tonliste. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name des gesuchten Tones </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>liste</parametername>
</parameternamelist>
<parameterdescription>
<para>Liste der Töne, in der der Ton gesucht wird </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>ton_ohne_namen</parametername>
<parametername>falls</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>name</emphasis> == <emphasis>NULL</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
<parametername>falls</parametername>
</parameternamelist>
<parameterdescription>
<para>Ton nicht in <emphasis>liste</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ton</parametername>
<parametername>sonst.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="69" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="69" bodyend="75"/>
        <references refid="d4/d12/ton_8h_1adf3f50ce72e583c1a3a2c42302c7d7f5" compoundref="df/de8/ton_8c" startline="69" endline="75">get_ton</references>
        <references refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" compoundref="d4/d12/ton_8h" startline="34">ton::name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <referencedby refid="d9/d7c/group__kernel_1ga0bc227a9a1fa0cb630a193e4c6af1af7" compoundref="dc/df5/Parser_8cpp" startline="2954" endline="3547">check_konsistenz</referencedby>
        <referencedby refid="da/dd2/tonsystem_8c_1aedcfdecbf7dd48ab19a6830732fa982e" compoundref="da/dd2/tonsystem_8c" startline="151" endline="169">check_tonsystem_konsistenz</referencedby>
        <referencedby refid="d2/d4a/umstimmung_8c_1a9fc87f323f75b7afaef30c37c78af7c6" compoundref="d2/d4a/umstimmung_8c" startline="538" endline="732">check_umstimmungs_konsistenz</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga13b966770b2c6d5e64470a014a958058" compoundref="d3/da0/TabGen_8cpp" startline="464" endline="511">expandiere_tonsystem</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1gac870ef84145f2f27a7b21506339cfb88" compoundref="d3/da0/TabGen_8cpp" startline="127" endline="133">get_komplex_frequenz</referencedby>
        <referencedby refid="d9/d7c/group__kernel_1ga813d2784f1403541be25a0a5d5da4545" compoundref="dc/df5/Parser_8cpp" startline="165" endline="172">get_ton</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a61af28a6d9513c57295b9bf6bad3e00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drucke_ton</definition>
        <argsstring>(struct ton *lauf)</argsstring>
        <name>drucke_ton</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>lauf</declname>
        </param>
        <briefdescription>
<para>Gibt einen Ton auf der Standardausgabe aus. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lauf</parametername>
</parameternamelist>
<parameterdescription>
<para>Ton </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="81" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="81" bodyend="108"/>
        <references refid="d7/dc9/structkomplex__intervall_1aafd0c9431aec7e190f7bf33577794bef" compoundref="d2/d8a/interval_8h" startline="86">komplex_intervall::faktor</references>
        <references refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" compoundref="d4/d12/ton_8h" startline="34">ton::name</references>
        <references refid="d7/dc9/structkomplex__intervall_1ae897df400fcb6617d8d1bdaed26e2b56" compoundref="d2/d8a/interval_8h" startline="87">komplex_intervall::name</references>
        <references refid="d7/dc9/structkomplex__intervall_1a91e64f6f6d25719010524e551c8119bf" compoundref="d2/d8a/interval_8h" startline="88">komplex_intervall::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" compoundref="d4/d12/ton_8h" startline="23">ton_absolut</references>
        <references refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21">ton::ton_absolut</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a">ton::ton_komplex</references>
        <references refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" compoundref="d4/d12/ton_8h" startline="35">ton::ton_typ</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <referencedby refid="d9/d7c/group__kernel_1ga9733bb2ee682ffff8a155dd6b1b93e8c" compoundref="dc/df5/Parser_8cpp" startline="614" endline="931">mutabor_programm_einlesen</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1aa3e79c7164fb84b3e03a95afd2d865ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_new_ton_absolut</definition>
        <argsstring>(char *name, double wert)</argsstring>
        <name>get_new_ton_absolut</name>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wert</declname>
        </param>
        <briefdescription>
<para>Fügt einen absoluten Ton ans Ende von <emphasis>list_of_toene</emphasis> an. </para>        </briefdescription>
        <detaileddescription>
<para>Taucht der Tonname schon einmal auf, wird ein fataler Fehler ausgegeben. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Bezeichnung des Tones, das angefügt werden soll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wert</parametername>
</parameternamelist>
<parameterdescription>
<para>Wert des Tones, der angfügt werden soll </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Es wird immer die gesamte Liste durchsucht. Effektivität? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="122" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="122" bodyend="137"/>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" compoundref="d4/d12/ton_8h" startline="23">ton_absolut</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="d9/d7c/group__kernel_1ga9733bb2ee682ffff8a155dd6b1b93e8c" compoundref="dc/df5/Parser_8cpp" startline="614" endline="931">mutabor_programm_einlesen</referencedby>
        <referencedby refid="df/d33/mut_8cc_1a5b7bf1384bf1f609b09f3bb5386b0822" compoundref="df/d33/mut_8cc" startline="1965" endline="3192">switch</referencedby>
        <referencedby refid="d3/da3/mut_8c_1acd8617a8f2ac0de8bc1cc032cf449e19" compoundref="d1/de1/Mut__Tab_8cpp" startline="476" endline="1596">yyparse</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1aa8f91addbbc92af1bfe65133d0b80605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_new_ton_komplex_positive</definition>
        <argsstring>(char *name, char *bezugston)</argsstring>
        <name>get_new_ton_komplex_positive</name>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>bezugston</declname>
        </param>
        <briefdescription>
<para>Fügt einen komplexen Ton ans Ende von <emphasis>list_of_toene</emphasis> an. </para>        </briefdescription>
        <detaileddescription>
<para>Dabei wird mittels <computeroutput><ref refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" kindref="member">get_last_komplex_intervall()</ref></computeroutput> die letzte eingelesene Intevallliste verwendet. Taucht der Tonname schon einmal auf, wird ein fataler Fehler ausgegeben. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Bezeichnung des Tones, das angefügt werden soll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bezugston</parametername>
</parameternamelist>
<parameterdescription>
<para>Basiston, auf den sich die Intervallliste bezieht. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Es wird immer die gesamte Liste durchsucht. Effektivität? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="148" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="148" bodyend="164"/>
        <references refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" compoundref="d4/d12/ton_8h" startline="41">ton::bezugston</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" compoundref="d5/d28/interval_8c" startline="529" endline="532">get_last_komplex_intervall</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="df/d33/mut_8cc_1a5b7bf1384bf1f609b09f3bb5386b0822" compoundref="df/d33/mut_8cc" startline="1965" endline="3192">switch</referencedby>
        <referencedby refid="d3/da3/mut_8c_1acd8617a8f2ac0de8bc1cc032cf449e19" compoundref="d1/de1/Mut__Tab_8cpp" startline="476" endline="1596">yyparse</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1abfa0d4b34c0225bf1824b777238e6f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_new_ton_komplex_negative</definition>
        <argsstring>(char *name, char *bezugston)</argsstring>
        <name>get_new_ton_komplex_negative</name>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>bezugston</declname>
        </param>
        <briefdescription>
<para>Fügt einen komplexen Ton ans Ende von <emphasis>list_of_toene</emphasis> an. </para>        </briefdescription>
        <detaileddescription>
<para>Dabei wird mittels <computeroutput><ref refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" kindref="member">get_last_komplex_intervall()</ref></computeroutput> die letzte eingelesene Intevallliste verwendet. Diese wird jedoch zunächst einmal invertiert. Taucht der Tonname schon einmal auf, wird ein fataler Fehler ausgegeben. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Bezeichnung des Tones, das angefügt werden soll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bezugston</parametername>
</parameternamelist>
<parameterdescription>
<para>Basiston, auf den sich die Intervallliste bezieht. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Es wird immer die gesamte Liste durchsucht. Effektivität? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="175" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="175" bodyend="200"/>
        <references refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" compoundref="d4/d12/ton_8h" startline="41">ton::bezugston</references>
        <references refid="d7/dc9/structkomplex__intervall_1aafd0c9431aec7e190f7bf33577794bef" compoundref="d2/d8a/interval_8h" startline="86">komplex_intervall::faktor</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" compoundref="d5/d28/interval_8c" startline="529" endline="532">get_last_komplex_intervall</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d7/dc9/structkomplex__intervall_1a91e64f6f6d25719010524e551c8119bf" compoundref="d2/d8a/interval_8h" startline="88">komplex_intervall::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <references refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" compoundref="d2/d29/heap_8c" startline="166" endline="217">xmalloc</references>
        <referencedby refid="df/d33/mut_8cc_1a5b7bf1384bf1f609b09f3bb5386b0822" compoundref="df/d33/mut_8cc" startline="1965" endline="3192">switch</referencedby>
        <referencedby refid="d3/da3/mut_8c_1acd8617a8f2ac0de8bc1cc032cf449e19" compoundref="d1/de1/Mut__Tab_8cpp" startline="476" endline="1596">yyparse</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a9bab183da553d52175a6f252aca2bca5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void belege_toene</definition>
        <argsstring>(struct ton **toene, struct ton *liste)</argsstring>
        <name>belege_toene</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> **</type>
          <declname>toene</declname>
        </param>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>liste</declname>
        </param>
        <briefdescription>
<para>Erzeugt zu einer einfach verketteten Liste von Tönen ein Array mit Verweisen auf die Einträge. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">toene</parametername>
</parameternamelist>
<parameterdescription>
<para>Array für Töne </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">liste</parametername>
</parameternamelist>
<parameterdescription>
<para>Liste der Töne </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Das Array muss vor dem Funktionsaufruf genügend Platz für alle Töne der Liste bieten. In der Funktion selbst findet keinerlei Längenprüfung statt. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="240" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="240" bodyend="251"/>
        <references refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" compoundref="d0/d15/errors_8c" startline="20">mutabor_debug_level</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ton_nummer</definition>
        <argsstring>(char *name)</argsstring>
        <name>ton_nummer</name>
        <param>
          <type><ref refid="d5/dee/group__route_1gafdffe3ab26a7d4cd9d6521731a6f396a" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sucht einen Ton in der globalen Tonliste. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name des zu suchenden Tones Wird der Ton nicht gefunden, wird ein fataler Fehler ausgelöst. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="257" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="257" bodyend="266"/>
        <references refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" compoundref="df/de8/ton_8c" startline="215">anzahl_toene</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
        <referencedby refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" compoundref="df/de8/ton_8c" startline="291" endline="330">berechne_ton_endgueltig</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_zyklen</definition>
        <argsstring>(int startknoten)</argsstring>
        <name>test_zyklen</name>
        <param>
          <type>int</type>
          <declname>startknoten</declname>
        </param>
        <briefdescription>
<para>Durchsucht die Adjazenzmatrix nach Kreisen. </para>        </briefdescription>
        <detaileddescription>
<para>Wird ein Kreis gefunden, wird ein fataler Fehler ausgelöst <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">startknoten</parametername>
</parameternamelist>
<parameterdescription>
<para>Nummer des ersten Knoten, der getestet werden soll. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="272" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="272" bodyend="285"/>
        <references refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" compoundref="df/de8/ton_8c" startline="229">adjazent</references>
        <references refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" compoundref="df/de8/ton_8c" startline="215">anzahl_toene</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" compoundref="df/de8/ton_8c" startline="220">visited</references>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void berechne_ton_endgueltig</definition>
        <argsstring>(int k)</argsstring>
        <name>berechne_ton_endgueltig</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Rechnet komplexe Töne in absolute um. </para>        </briefdescription>
        <detaileddescription>
<para>Wird ein ungültiger Tontyp gefunden, wird ein fataler Fehler ausgelöst. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">k</parametername>
</parameternamelist>
<parameterdescription>
<para>Nummer des zu bearbeitenden Tones </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="291" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="291" bodyend="330"/>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="d2/d8a/interval_8h_1aacf88ad309137961680bd044bd79d095" compoundref="d5/d28/interval_8c" startline="153" endline="183">get_wert_komplex_intervall</references>
        <references refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" compoundref="d0/d15/errors_8c" startline="20">mutabor_debug_level</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" compoundref="d4/d12/ton_8h" startline="23">ton_absolut</references>
        <references refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21">ton::ton_absolut</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" compoundref="df/de8/ton_8c" startline="257" endline="266">ton_nummer</references>
        <references refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" compoundref="d4/d12/ton_8h" startline="35">ton::ton_typ</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <referencedby refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" compoundref="df/de8/ton_8c" startline="338" endline="438">berechne_toene_absolut</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void berechne_toene_absolut</definition>
        <argsstring>(struct ton *list_of_toene)</argsstring>
        <name>berechne_toene_absolut</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>list_of_toene</declname>
        </param>
        <briefdescription>
<para>Berechnet die absoluten Tonwerte für eine einfach verkettete Tonliste. </para>        </briefdescription>
        <detaileddescription>
<para>Dabei werden die globalen Variablen <computeroutput>anzahl_toene</computeroutput>, <computeroutput>toene</computeroutput>, <computeroutput>visited</computeroutput> und die Adjazenzmatrix benutzt. Falls mit <computeroutput>DEBUG_ANZEIGE</computeroutput> compiliert, wird die Matrix nach der Aufstellung auf der Standardausgabe ausgegeben. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">list_of_toene</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="338" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="338" bodyend="438"/>
        <references refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" compoundref="df/de8/ton_8c" startline="229">adjazent</references>
        <references refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" compoundref="df/de8/ton_8c" startline="215">anzahl_toene</references>
        <references refid="df/de8/ton_8c_1a9bab183da553d52175a6f252aca2bca5" compoundref="df/de8/ton_8c" startline="240" endline="251">belege_toene</references>
        <references refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" compoundref="df/de8/ton_8c" startline="291" endline="330">berechne_ton_endgueltig</references>
        <references refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" compoundref="dd/dff/testidentifier_8c" startline="12">fatal_error</references>
        <references refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" compoundref="df/de8/ton_8c" startline="222">matrix</references>
        <references refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" compoundref="d0/d15/errors_8c" startline="20">mutabor_debug_level</references>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" compoundref="df/de8/ton_8c" startline="272" endline="285">test_zyklen</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" compoundref="d4/d12/ton_8h" startline="23">ton_absolut</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="d4/d12/ton_8h_1a7205dceb2bb780245ab66f9b032e301a" compoundref="df/de8/ton_8c" startline="57" endline="60">ton_list_laenge</references>
        <references refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" compoundref="df/de8/ton_8c" startline="257" endline="266">ton_nummer</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <references refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" compoundref="df/de8/ton_8c" startline="220">visited</references>
        <references refid="da/ddb/heap_8h_1a95116b44bc41d1e825e79c148ab7d0a6" compoundref="d2/d29/heap_8c" startline="96" endline="107">xalloca</references>
        <references refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" compoundref="da/d02/Hilfs_8cpp" startline="114" endline="122">xde_alloca</references>
        <referencedby refid="d9/d7c/group__kernel_1ga9733bb2ee682ffff8a155dd6b1b93e8c" compoundref="dc/df5/Parser_8cpp" startline="614" endline="931">mutabor_programm_einlesen</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1a0a6c4428485d9da14db1229e94d4db5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double get_komplex_frequenz</definition>
        <argsstring>(struct ton *dieser)</argsstring>
        <name>get_komplex_frequenz</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>dieser</declname>
        </param>
        <briefdescription>
<para>Berechnet deie Frequenz eines komplexen Tones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dieser</parametername>
</parameternamelist>
<parameterdescription>
<para>Ton, für den die Frequenz berechnet werden soll. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="443" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="443" bodyend="448"/>
        <references refid="d2/d8a/interval_8h_1a0812e04f17c515d5e3a639dd51e5801c" compoundref="d5/d28/interval_8c" startline="190" endline="204">get_komplex_faktor</references>
        <references refid="d4/d12/ton_8h_1adf3f50ce72e583c1a3a2c42302c7d7f5" compoundref="df/de8/ton_8c" startline="69" endline="75">get_ton</references>
        <references refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a">ton::ton_komplex</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
        <referencedby refid="d9/d7c/group__kernel_1ga2c6a360c780adc8cdda172a1a26c164b" compoundref="d3/da0/TabGen_8cpp" startline="396" endline="461">expand_tonliste</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de8/ton_8c_1aeea5a37741f03858b0ea4d0adfae52eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int enthaelt_nur_konstante_toene</definition>
        <argsstring>(struct ton *lauf)</argsstring>
        <name>enthaelt_nur_konstante_toene</name>
        <param>
          <type>struct <ref refid="dd/da3/structton" kindref="compound">ton</ref> *</type>
          <declname>lauf</declname>
        </param>
        <briefdescription>
<para>Testet, ob eine Liste von Tönen nue feste, konstante Töne enthält. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lauf</parametername>
</parameternamelist>
<parameterdescription>
<para>Liste der Töne. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Die Liste enthält nur konstante Töne. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Es wurde ein relativer komplexer Ton gefunden. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" line="455" column="1" bodyfile="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c" bodystart="455" bodyend="466"/>
        <references refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="dc/ddf/idlist_8hh" startline="6">name</references>
        <references refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" compoundref="d4/d12/ton_8h" startline="45">ton::next</references>
        <references refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" compoundref="d4/d12/ton_8h" startline="24">ton_komplex</references>
        <references refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b">ton::u</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Alles zu Tönen. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="rcs"><title>Header:</title><para>/home/tobias/macbookbackup/Entwicklung/mutabor/cvs-backup/mutabor/mutabor/libmutabor/ton.c,v 1.4 2005/11/03 14:56:33 keinstein Exp </para></simplesect>
<simplesect kind="author"><para>Tobias Schlemmer <ulink url="mailto:keinstein_junior@gmx.net">keinstein_junior@gmx.net</ulink> </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2005/11/03 14:56:33 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>1.4 </para></simplesect>
</para><para><simplesect kind="rcs"><title>Log:</title><para><ref refid="df/de8/ton_8c" kindref="compound">ton.c</ref>,v </para></simplesect>
Revision 1.4 2005/11/03 14:56:33 keinstein interpreter functions</para><para>Revision 1.3 2005/07/20 12:29:50 keinstein Kopf korrigiert config.h Rudimentäre Debug-Ausgaben</para><para>Revision 1.2 2005/07/19 15:15:27 keinstein Using own Templates</para><para>Revision 1.1 2005/07/08 14:44:20 keinstein Neue Datei. Aus <ref refid="d2/d72/parser_8c" kindref="compound">parser.c</ref> herausgelöst. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>für<sp/>HAVE_STDDEF_H,<sp/>size_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STDDEF_H</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d12/ton_8h" kindref="compound">mutabor/ton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/ddb/heap_8h" kindref="compound">mutabor/heap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d8a/interval_8h" kindref="compound">mutabor/interval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d45/errors_8h" kindref="compound">mutabor/errors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="df/de8/ton_8c_1aa614e631a7a7c9e90ad0614fbee2dd13" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><ref refid="d4/d12/ton_8h_1aa614e631a7a7c9e90ad0614fbee2dd13" kindref="member">list_of_toene</ref>;</highlight></codeline>
<codeline lineno="43" refid="df/de8/ton_8c_1a680b21381666f4b8c5d13f5c832e51c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><ref refid="d4/d12/ton_8h_1a680b21381666f4b8c5d13f5c832e51c2" kindref="member">ton_ohne_namen</ref>;<sp/></highlight></codeline>
<codeline lineno="45" refid="df/de8/ton_8c_1a153ddee23195f6f86fe37d75d5ac1c67" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1a153ddee23195f6f86fe37d75d5ac1c67" kindref="member">init_nullton</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>ton_ohne_namen=(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>*)<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>ton_ohne_namen-&gt;<ref refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" kindref="member">name</ref>=NULL;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>ton_ohne_namen-&gt;<ref refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" kindref="member">ton_typ</ref>=<ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>ton_ohne_namen-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21" kindref="member">ton_absolut</ref>.ton_wert=0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>ton_ohne_namen-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>=NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="df/de8/ton_8c_1a7205dceb2bb780245ab66f9b032e301a" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1a7205dceb2bb780245ab66f9b032e301a" kindref="member">ton_list_laenge</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*list)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="d4/d12/ton_8h_1a7205dceb2bb780245ab66f9b032e301a" kindref="member">ton_list_laenge</ref><sp/>(list<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="df/de8/ton_8c_1adf3f50ce72e583c1a3a2c42302c7d7f5" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/><ref refid="d4/d12/ton_8h_1adf3f50ce72e583c1a3a2c42302c7d7f5" kindref="member">get_ton</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>liste)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name==NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ton_ohne_namen);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(liste<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strcmp<sp/>(name,<sp/>liste-&gt;<ref refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" kindref="member">name</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>liste;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1adf3f50ce72e583c1a3a2c42302c7d7f5" kindref="member">get_ton</ref><sp/>(name,<sp/>liste-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="df/de8/ton_8c_1a61af28a6d9513c57295b9bf6bad3e00a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1a61af28a6d9513c57295b9bf6bad3e00a" kindref="member">drucke_ton</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>lauf)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Name:<sp/>%s,<sp/>Typ:<sp/>%s:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf-&gt;<ref refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" kindref="member">name</ref><sp/>?<sp/>lauf-&gt;<ref refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" kindref="member">name</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;(NULL)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf-&gt;<ref refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" kindref="member">ton_typ</ref><sp/>==<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;absolut&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf-&gt;<ref refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" kindref="member">ton_typ</ref><sp/>==<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;komplex&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lauf-&gt;<ref refid="dd/da3/structton_1a3c9499dd5cfd4d6ce65697b1a86852e6" kindref="member">name</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(lauf-&gt;<ref refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" kindref="member">ton_typ</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref><sp/>:<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%f\n&quot;</highlight><highlight class="normal">,<sp/>lauf-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21" kindref="member">ton_absolut</ref>.ton_wert);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref><sp/>:<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/dc9/structkomplex__intervall" kindref="compound">komplex_intervall</ref><sp/>*<sp/>help<sp/>=<sp/>lauf-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a" kindref="member">ton_komplex</ref>.komplex_liste;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>lauf-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a" kindref="member">ton_komplex</ref>.bezugston);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(help)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Faktor:<sp/>%f<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help-&gt;<ref refid="d7/dc9/structkomplex__intervall_1aafd0c9431aec7e190f7bf33577794bef" kindref="member">faktor</ref>,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help-&gt;<ref refid="d7/dc9/structkomplex__intervall_1ae897df400fcb6617d8d1bdaed26e2b56" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help<sp/>=<sp/>help-&gt;<ref refid="d7/dc9/structkomplex__intervall_1a91e64f6f6d25719010524e551c8119bf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*********<sp/>Einleseroutinen<sp/>fuer<sp/>die<sp/>Toene<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Es<sp/>wird<sp/>einfach<sp/>eine<sp/>Liste<sp/>of<sp/>Toenen<sp/>aufgebaut<sp/><sp/>**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Je<sp/>nach<sp/>erkanntem<sp/>Ton_Typ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="df/de8/ton_8c_1aa3e79c7164fb84b3e03a95afd2d865ee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1aa3e79c7164fb84b3e03a95afd2d865ee" kindref="member">get_new_ton_absolut</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wert)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>*<sp/>lauf;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lauf=<sp/>&amp;<sp/>list_of_toene;<sp/>*<sp/>lauf;<sp/>lauf=<sp/>&amp;<sp/>(*lauf)-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strcmp<sp/>(name,<sp/>(*<sp/>lauf)-&gt;name))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(11,name);<sp/></highlight><highlight class="comment">/*<sp/>Tonname<sp/>doppelt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>*)<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_absolut.ton_wert<sp/>=<sp/>wert;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="df/de8/ton_8c_1aa8f91addbbc92af1bfe65133d0b80605" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1aa8f91addbbc92af1bfe65133d0b80605" kindref="member">get_new_ton_komplex_positive</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" kindref="member">bezugston</ref>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>*<sp/>lauf;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lauf=<sp/>&amp;<sp/>list_of_toene;<sp/>*<sp/>lauf;<sp/>lauf=<sp/>&amp;<sp/>(*lauf)-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strcmp<sp/>(name,<sp/>(*lauf)-&gt;name))<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(11,name);<sp/></highlight><highlight class="comment">/*<sp/>Tonname<sp/>doppelt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>*)<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.bezugston<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" kindref="member">bezugston</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.komplex_liste<sp/>=<sp/><ref refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" kindref="member">get_last_komplex_intervall</ref><sp/>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="df/de8/ton_8c_1abfa0d4b34c0225bf1824b777238e6f98" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1abfa0d4b34c0225bf1824b777238e6f98" kindref="member">get_new_ton_komplex_negative</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" kindref="member">bezugston</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>*<sp/>lauf;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lauf=<sp/>&amp;<sp/>list_of_toene;<sp/>*<sp/>lauf;<sp/>lauf=<sp/>&amp;<sp/>(*lauf)-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strcmp<sp/>(name,<sp/>(*lauf)-&gt;name))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(11,name);<sp/></highlight><highlight class="comment">/*<sp/>Tonname<sp/>doppelt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>*)<sp/><ref refid="da/ddb/heap_8h_1a42ccfa6fc49cc4ce90cc44cd05052490" kindref="member">xmalloc</ref><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.bezugston<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dd/da3/structton_1a1a0c3eb687ec5c5275cc91592bd268f7" kindref="member">bezugston</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/dc9/structkomplex__intervall" kindref="compound">komplex_intervall</ref><sp/>*<sp/>help<sp/>=<sp/><ref refid="d2/d8a/interval_8h_1a628fbc6b1014c2a2290a7510a81f60ec" kindref="member">get_last_komplex_intervall</ref><sp/>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref><sp/>(0,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help<sp/>-&gt;<sp/><ref refid="d7/dc9/structkomplex__intervall_1aafd0c9431aec7e190f7bf33577794bef" kindref="member">faktor</ref><sp/>*=<sp/>-1.0<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/>u.ton_komplex.komplex_liste<sp/>=<sp/>help;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>lauf)<sp/>-&gt;<sp/><ref refid="d7/dc9/structkomplex__intervall_1a91e64f6f6d25719010524e551c8119bf" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hier<sp/>werden<sp/>die<sp/>Toene<sp/>aufgel�st.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nach<sp/>dem<sp/>Parsing<sp/>ist<sp/>nur<sp/>die<sp/>Syntax-Struktur</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorhanden,<sp/>aber<sp/>keine<sp/>fertig<sp/>ausgerechneten<sp/>Toene.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Es<sp/>wird<sp/>ein<sp/>azyklischer<sp/>Graph<sp/>der<sp/>Toene<sp/>und<sp/>ihrer</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Untertoene<sp/>gebildet,<sp/>der<sp/>dann<sp/>nach<sp/>den</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth-first-search<sp/>traversiert<sp/>wird.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dabei<sp/>bekommt<sp/>jeder<sp/>Ton<sp/>seine<sp/>Absolutfrequenz<sp/>berechnet.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217" refid="df/de8/ton_8c_1a94804479feb853d5626e9384b24e8985" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>**<sp/><ref refid="df/de8/ton_8c_1a94804479feb853d5626e9384b24e8985" kindref="member">toene</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" kindref="member">matrix</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" refkind="member"><highlight class="preprocessor">#define<sp/>adjazent(a,b)<sp/>matrix<sp/>[<sp/>(a)<sp/>*<sp/>anzahl_toene<sp/>*<sp/>sizeof<sp/>(char)<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(b)<sp/>*<sp/>sizeof<sp/>(char)]</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="df/de8/ton_8c_1a9bab183da553d52175a6f252aca2bca5" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1a9bab183da553d52175a6f252aca2bca5" kindref="member">belege_toene</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>**toene,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>liste)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>tone<sp/>array\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(liste)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*toene<sp/>=<sp/>liste;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toene++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>liste<sp/>=<sp/>liste-&gt;<ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" kindref="member">ton_nummer</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strcmp<sp/>(name,<sp/>toene[i]-&gt;name))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(27,name);<sp/></highlight><highlight class="comment">/*<sp/>Ton<sp/>n.dekl.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>to<sp/>prevent<sp/>warnings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="272" refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" kindref="member">test_zyklen</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startknoten)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" kindref="member">adjazent</ref><sp/>(startknoten,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[i])<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(65,toene<sp/>[startknoten]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,toene<sp/>[i]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" kindref="member">test_zyklen</ref><sp/>(i);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" kindref="member">berechne_ton_endgueltig</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>help,<sp/>help2;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Calculate<sp/>final<sp/>tone<sp/>values<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,k);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(toene[k]-&gt;<ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hier<sp/>nichts<sp/>zu<sp/>tun<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Absolute<sp/>tone<sp/>%s:<sp/>%f\n&quot;</highlight><highlight class="normal">,toene[k]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,toene[k]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_absolut.ton_wert);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref>:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Complex<sp/>tone<sp/>%s:\n&quot;</highlight><highlight class="normal">,toene[k]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" kindref="member">ton_nummer</ref><sp/>(toene[k]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.bezugston);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" kindref="member">berechne_ton_endgueltig</ref><sp/>(b);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>help2<sp/>=<sp/><ref refid="d2/d8a/interval_8h_1aacf88ad309137961680bd044bd79d095" kindref="member">get_wert_komplex_intervall</ref><sp/>(toene[k]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.komplex_liste);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>help<sp/>=<sp/>toene[b]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21" kindref="member">ton_absolut</ref>.ton_wert;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toene[k]-&gt;<ref refid="dd/da3/structton_1a2da939321629a524deceb2bea16366d9" kindref="member">ton_typ</ref><sp/>=<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toene[k]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1a2865e603abed94a0582ca7798ad95a21" kindref="member">ton_absolut</ref>.ton_wert<sp/>=<sp/>help<sp/>*<sp/>help2;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Complex<sp/>tone<sp/>%s:<sp/>%f\n&quot;</highlight><highlight class="normal">,toene[k]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/>toene[k]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_absolut.ton_wert);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(0,</highlight><highlight class="stringliteral">&quot;schleife&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="df/de8/ton_8c_1a8a1cbd01124a07669fa2b5fb4d1a49ee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1a611d8511d6c4f19ff594b2f44a1842f9" kindref="member">berechne_toene_absolut</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*list_of_toene)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Calculate<sp/>abolute<sp/>tone<sp/>values\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref><sp/>=<sp/><ref refid="d4/d12/ton_8h_1a7205dceb2bb780245ab66f9b032e301a" kindref="member">ton_list_laenge</ref><sp/>(list_of_toene);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>toene<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/da3/structton" kindref="compound">ton</ref>*<sp/>*)<sp/><ref refid="da/ddb/heap_8h_1a95116b44bc41d1e825e79c148ab7d0a6" kindref="member">xalloca</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*)<sp/>*<sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="da/ddb/heap_8h_1a95116b44bc41d1e825e79c148ab7d0a6" kindref="member">xalloca</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" kindref="member">matrix</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="da/ddb/heap_8h_1a95116b44bc41d1e825e79c148ab7d0a6" kindref="member">xalloca</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref><sp/>*<sp/><ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Feld<sp/>mit<sp/>toenen<sp/>initialisieren<sp/>(zum<sp/>schnelleren<sp/>Zugriff)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="df/de8/ton_8c_1a9bab183da553d52175a6f252aca2bca5" kindref="member">belege_toene</ref><sp/>(toene,<sp/>list_of_toene);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Adjazenzmatrix<sp/>initialisieren<sp/>(Kein<sp/>Ton<sp/>h�ngt<sp/>vom<sp/>anderen<sp/>ab)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>adjacency<sp/>matrix\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" kindref="member">adjazent</ref><sp/>(i,j)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Adjazenzmatrix<sp/>initialisieren<sp/>(Abhängigkeiten<sp/>eintragen)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>tone<sp/>entries\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toene[i]-&gt;<ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/>==<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a39f2b025374e0969cf0d22ea3389a36b" kindref="member">ton_absolut</ref>)<sp/><sp/></highlight><highlight class="comment">/*<sp/>alles<sp/>ok<sp/>*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toene[i]-&gt;<ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/>==<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" kindref="member">adjazent</ref><sp/>(i,<sp/><ref refid="df/de8/ton_8c_1a184008ed76f721b551b35fba839272f1" kindref="member">ton_nummer</ref><sp/>(toene[i]-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.bezugston))<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dff/testidentifier_8c_1a51c4524d98f03e6f3eed99caf26e5fff" kindref="member">fatal_error</ref>(0,</highlight><highlight class="stringliteral">&quot;schleife&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d45/errors_8h_1ae2387ffc56e4c38de349dcd17ce78865" kindref="member">mutabor_debug_level</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjazenzmatrix<sp/>anzeigen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;Tone<sp/>Matrix:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;%s<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>toene[i]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" kindref="member">adjazent</ref><sp/>(i,j))</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;%s<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>toene[j]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>auf<sp/>Zyklenfreiheit<sp/>Pruefen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[k]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1ac3dbc291054ffea9750cedc4e760bbd4" kindref="member">test_zyklen</ref><sp/>(k);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref><sp/>[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Toene<sp/>endgueltig<sp/>berechnen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/de8/ton_8c_1a9ee68d12698d887ee5970f589f228937" kindref="member">berechne_ton_endgueltig</ref><sp/>(k);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_ANZEIGE</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjazenzmatrix<sp/>anzeigen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Matrix:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>toene[i]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;<ref refid="df/de8/ton_8c_1afbea649390ed64a23faa58e030c993f0" kindref="member">anzahl_toene</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/de8/ton_8c_1a2ed1ec7e866f3c90c32fa270fa111ae4" kindref="member">adjazent</ref><sp/>(i,j))</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>toene[j]-&gt;<ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" kindref="member">xde_alloca</ref><sp/>(toene);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><ref refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" kindref="member">xde_alloca</ref><sp/>(<ref refid="df/de8/ton_8c_1a7999d7225aef06bf494a27803df3d6ed" kindref="member">visited</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="d9/d7c/group__kernel_1ga32c911fc6ec259d831549e90fbd9f00c" kindref="member">xde_alloca</ref><sp/>(<ref refid="df/de8/ton_8c_1affecc17206fd5a2778b175ad231246d9" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="df/de8/ton_8c_1a0a6c4428485d9da14db1229e94d4db5b" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/d12/ton_8h_1a0a6c4428485d9da14db1229e94d4db5b" kindref="member">get_komplex_frequenz</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>dieser)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="d4/d12/ton_8h_1adf3f50ce72e583c1a3a2c42302c7d7f5" kindref="member">get_ton</ref><sp/>(dieser-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a" kindref="member">ton_komplex</ref>.bezugston,<sp/>list_of_toene)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_absolut.ton_wert;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/><ref refid="d2/d8a/interval_8h_1a0812e04f17c515d5e3a639dd51e5801c" kindref="member">get_komplex_faktor</ref><sp/>(dieser-&gt;<ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.<ref refid="dd/da3/structton_1aac4a8ccc88617139d5880560beac649a" kindref="member">ton_komplex</ref>.komplex_liste);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="df/de8/ton_8c_1aeea5a37741f03858b0ea4d0adfae52eb" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/de8/ton_8c_1aeea5a37741f03858b0ea4d0adfae52eb" kindref="member">enthaelt_nur_konstante_toene</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/da3/structton" kindref="compound">ton</ref><sp/>*<sp/>lauf)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lauf)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lauf<sp/>-&gt;<sp/><ref refid="dc/ddf/idlist_8hh_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>!=<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf<sp/>-&gt;<sp/><ref refid="d4/d12/ton_8h_1a4fe65436d72e9762190aa11871293925" kindref="member">ton_typ</ref><sp/>==<sp/><ref refid="d9/d7c/group__kernel_1gga4fe65436d72e9762190aa11871293925a435f7f05f60006f36ac067d647a8ac92" kindref="member">ton_komplex</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a2173eae7dfaa7102dbed7bd7900ae82b" kindref="member">u</ref>.ton_komplex.bezugston<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lauf<sp/>=<sp/>lauf<sp/>-&gt;<sp/><ref refid="dd/da3/structton_1a0531d0ab1a39337684a162a66c88b5d0" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/tobias/macbookbackup/Entwicklung/mutabor/mutabor-git/src/libmutabor/ton.c"/>
  </compounddef>
</doxygen>
